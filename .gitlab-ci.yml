variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GET_SOURCES_ATTEMPTS: 3

before_script:
  # - pip3 install dependencies/pyIpx/
  # - pip3 install dependencies/pyIpx/requirements.txt
  - export PYTHONPATH=$PWD
  - export MODULE_PATH=$PWD
  - export IN_DOCKER=True
  - echo MODULE_PATH=$MODULE_PATH

stages:
  - documentation
  - test

.my_template: &PREPARE_TESTING_FREIA
    stage: test
    before_script:
    - pwd
    - git status
    - export USER=root
    - export LOGNAME=root
    - source /etc/profile.d/modules.sh
    - module use /usr/local/modules/default
    - module unload python
    - module load python/3.7
    - module load uda
    - module show uda
    - module list
    - module unload vtk-7.1.0/
    - module load vtk7/3.5.1  # version required for calcam renders to work
    - echo ld_library_path=$LD_LIBRARY_PATH
    - echo pythonpath=$PYTHONPATH
#    - pip install --user --upgrade pip  # breaks
    - pip install --user future-fstrings   # tmp
    - which pip   # tmp
    - python -m pip --version   # tmp
    - pip install --user --upgrade setuptools pytest-cov
    - which pip   # tmp
#    - pip list   # tmp
    - pip install --user git+https://oauth2:$AUTH_TOKEN@git.ccfe.ac.uk/SOL_Transport/pyIpx.git@master
    - pip install --user git+https://github.com/euratom-software/calcam.git
    - pip install --user -r ./requirements.txt
    - pip install --user .
    - pip list
    - python -m pip --version   # tmp
#    - python -m pip show vtk   # tmp
    - python -m pip install --user vtk
    - python -m pip show vtk   # tmp
    - python -m pip show uda   # tmp
    - pwd

.my_template: &PREPARE_TESTING_UBUNTU
    stage: test
    before_script:
    - pwd
    - apt-get update -y
    - apt-get install -y git
    - apt-get install -y  python3-pip
    - apt-get install -y libsm6 libxext6 libxrender-dev   # opencv dependencies
    #- apt-get install -y python-vtk
    - pip list   # tmp
    - pip install --user --upgrade pip setuptools
#    - python -m pip show vtk   # tmp
    # - python -m pip install --user vtk==  # Produce message showing available versions
    - python -m pip install --user vtk #==9.0  # Import error with 8.1.2
    - python -m pip show vtk   # tmp
    - pip install --user git+https://oauth2:$AUTH_TOKEN@git.ccfe.ac.uk/SOL_Transport/pyIpx.git@master
    - pip install --user git+https://github.com/euratom-software/calcam.git
    - cd fire/theodor/theofast/
    - pwd
    - make  # Build THEODOR C shared object file
    - cd ../../..
    - pwd
    - apt-get install -y libopenjp2-7  # for glymur jpg2000 decoding in pyIpx
    - pip install --user pytest-cov
    - pip install --user pyyaml
#    - pip install --user git+git@git.ccfe.ac.uk:SOL_Transport/pyIpx.git@ipx2_pip
#    - pip install --user git+https://gitlab-ci-token:7sHGos9smHycA5PjX3R6@git.ccfe.ac.uk:SOL_Transport/pyIpx.git@ipx2_pip
    - apt-get install -y cmake swig
    - apt-get install -y libboost-dev
    - apt-get install -y openssl libssl-dev
    - apt-get install -y libxml2  # Needed for newer versions of UDA?
    - cd dependencies/
    - ./make-uda-client-only.sh
#    - cd uda-install-2.2.6/python_installer
    - cd uda-install-2.4.0/python_installer
    - pip install --user .
    - export UDA_HOST=idam3.mast.ccfe.ac.uk
    - export UDA_PORT=56565
#    - export LD_LIBRARY_PATH=/builds/MAST-U_Scheduler/air/dependencies/uda-install-2.2.6/lib:$LD_LIBRARY_PATH
    - export LD_LIBRARY_PATH=/builds/MAST-U_Scheduler/air/dependencies/uda-install-2.4.0/lib:$LD_LIBRARY_PATH
    - export CPF_HOST=idam3.mast.ccfe.ac.uk
    - export CPF_PORT=8000
    - cd ../../..
    - pwd
    - pip install --user -r ./requirements.txt
    - pip install --user .
    - pip list
    - python -m pip --version   # tmp
#    - python -m pip show vtk   # tmp
    - python -m pip show vtk   # tmp
    - python -m pip show uda   # tmp
    - pwd

.my_template: &PREPARE_TESTS
    stage: test
    script:
    - pwd
    - pip install --user git+https://oauth2:$AUTH_TOKEN@git.ccfe.ac.uk/SOL_Transport/pyIpx.git@master
    - pip install --user git+https://github.com/euratom-software/calcam.git
    - cd fire/theodor/theofast/
    - pwd
    - make  # Build THEODOR C shared object file
    - cd ../../..
    - pwd
    - apt-get install -y libopenjp2-7  # for glymur jpg2000 decoding in pyIpx
    - pip install --user .

.my_template: &SPHINX
    stage: documentation
    before_script:
    - pwd
#    - apt-get update -y
#    - apt-get install -y git
#    - apt-get install -y  python3-pip
#    - pip install --user --upgrade pip setuptools
#    - apt-get install -y make
#    - apt-get install -y python3-sphinx
    script:
    - cd docs/sphinx/
    - make html
    - cp -r build/html ../../public
    - cd ../..
    - pwd
    # Docs at: https://MAST-U_Scheduler/.gitpages.ccfe.ac.uk/air
    artifacts:
      paths:
      - public/
#    only:
#    - ci   # Only run CI workfow on 'ci' branch



.my_template: &TEST
    stage: test
    script:
      - pwd
      - echo MODULE_PATH=$MODULE_PATH
#      - cd $MODULE_PATH
      - pwd
      - ls
      - python setup.py test

.my_template: &TEST_FAST
    stage: test
    script:
      - pwd
      - pip install --user .
      - pytest tests/test_suite_fast.py

.my_template: &TEST_SLOW
    stage: test
    script:
      - pwd
      - pip install --user .
      - pytest tests/test_suite_slow.py

test_python3.7:
    <<: *PREPARE_TESTING_UBUNTU
#    <<: *PREPARE_TESTS
    <<: *TEST
    image: python:3.7-slim

test_freia:
    <<: *PREPARE_TESTING_FREIA
#    <<: *PREPARE_TESTS
    <<: *TEST
    tags:
      - freia

update_docs:
    <<: *PREPARE_TESTING_FREIA
    <<: *SPHINX
    tags:
      - freia